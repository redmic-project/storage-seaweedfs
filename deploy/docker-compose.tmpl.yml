version: '3.9'

services:
  swfs-master:
    image: ${IMAGE_NAME}:${IMAGE_TAG}
    entrypoint: /bin/sh
    command:
      - -c
      - |
        $$(echo "
          weed -logtostderr=true master
            -mdir=${DATA_PATH}
            -volumePreallocate
            -volumeSizeLimitMB=1024
            -defaultReplication=${DEFAULT_REPLICATION}
            -ip=$${MASTER_IP}
            -ip.bind=0.0.0.0
            -port=${MASTER_PORT}
            -peers=${MASTER_HOST}-1:${MASTER_PORT},${MASTER_HOST}-2:${MASTER_PORT},${MASTER_HOST}-3:${MASTER_PORT}
        ")
    hostname: ${MASTER_IP}
    environment:
      MASTER_IP:
    networks:
      seaweedfs-net:
      traefik-net:
    volumes:
      - master-vol:${DATA_PATH}
    healthcheck:
      test: wget --spider -q http://127.0.0.1:${MASTER_PORT}/cluster/healthz
      interval: ${HEALTHCHECK_INTERVAL}
      timeout: ${HEALTHCHECK_TIMEOUT}
      retries: ${HEALTHCHECK_RETRIES}
      start_period: ${HEALTHCHECK_START_PERIOD}
    deploy:
      mode: replicated
      replicas: ${MASTER_REPLICAS:-3}
      restart_policy:
        delay: ${MASTER_RESTART_DELAY:-1s}
      update_config:
        delay: ${MASTER_UPDATE_DELAY:-1m}
      placement:
        constraints:
          - "node.labels.${MASTER_NODE_LABEL_NAME:-swfs-master}==${MASTER_NODE_LABEL_VALUE:-1}"
        max_replicas_per_node: 1
      resources:
        limits:
          cpus: '${MASTER_RESOURCES_LIMITS_CPUS:-0.1}'
          memory: ${MASTER_RESOURCES_LIMITS_MEMORY:-64M}
        reservations:
          cpus: '${MASTER_RESOURCES_RESERVATIONS_CPUS:-0.001}'
          memory: ${MASTER_RESOURCES_RESERVATIONS_MEMORY:-32M}
      labels:
        traefik.enable: 'true'
        traefik.http.routers.swfs-master.entrypoints: ${TRAEFIK_ENTRYPOINT}
        traefik.http.routers.swfs-master.rule: Host(`${MASTER_TRAEFIK_SUBDOMAIN}.${PUBLIC_HOSTNAME}`)
        traefik.http.middlewares.swfs-master-auth.basicauth.users: ${MASTER_TRAEFIK_AUTH}
        traefik.http.routers.swfs-master.middlewares: swfs-master-auth
        traefik.http.services.swfs-master.loadbalancer.server.port: ${MASTER_PORT}
        traefik.http.services.swfs-master.loadbalancer.sticky.cookie: 'true'

  swfs-volume:
    image: ${IMAGE_NAME}:${IMAGE_TAG}
    entrypoint: /bin/sh
    command:
      - -c
      - |
        $$(echo "
          weed -logtostderr=true volume
            -dir=${DATA_PATH}
            -max=0
            -dataCenter=$${VOLUME_DATACENTER}
            -rack=$${VOLUME_RACK}
            -ip=$${VOLUME_IP}
            -ip.bind=0.0.0.0
            -port=${VOLUME_PORT}
            -publicUrl=${VOLUME_TRAEFIK_SUBDOMAIN}.${PUBLIC_HOSTNAME}
            -mserver=${MASTER_HOST}-1:${MASTER_PORT},${MASTER_HOST}-2:${MASTER_PORT},${MASTER_HOST}-3:${MASTER_PORT}
        ")
    hostname: ${VOLUME_IP}
    environment:
      VOLUME_IP:
      VOLUME_DATACENTER: ${DATACENTER}
      VOLUME_RACK: ${RACK}
    networks:
      seaweedfs-net:
      traefik-net:
    volumes:
      - volume-vol:${DATA_PATH}
    healthcheck:
      test: wget --spider -q http://127.0.0.1:${VOLUME_PORT}/healthz
      interval: ${HEALTHCHECK_INTERVAL}
      timeout: ${HEALTHCHECK_TIMEOUT}
      retries: ${HEALTHCHECK_RETRIES}
      start_period: ${HEALTHCHECK_START_PERIOD}
    deploy:
      mode: replicated
      replicas: ${VOLUME_REPLICAS:-3}
      restart_policy:
        delay: ${VOLUME_RESTART_DELAY:-5s}
      update_config:
        delay: ${VOLUME_UPDATE_DELAY:-5m}
      placement:
        constraints:
          - "node.labels.${VOLUME_NODE_LABEL_NAME:-swfs-volume}==${VOLUME_NODE_LABEL_VALUE:-1}"
        max_replicas_per_node: 1
      resources:
        limits:
          cpus: '${VOLUME_RESOURCES_LIMITS_CPUS:-1}'
          memory: ${VOLUME_RESOURCES_LIMITS_MEMORY:-64M}
        reservations:
          cpus: '${VOLUME_RESOURCES_RESERVATIONS_CPUS:-0.1}'
          memory: ${VOLUME_RESOURCES_RESERVATIONS_MEMORY:-32M}
      labels:
        traefik.enable: 'true'
        traefik.http.routers.swfs-volume.entrypoints: ${TRAEFIK_ENTRYPOINT}
        traefik.http.routers.swfs-volume.rule: Host(`${VOLUME_TRAEFIK_SUBDOMAIN}.${PUBLIC_HOSTNAME}`)
        traefik.http.middlewares.swfs-volume-auth.basicauth.users: ${VOLUME_TRAEFIK_AUTH}
        traefik.http.routers.swfs-volume.middlewares: swfs-volume-auth
        traefik.http.services.swfs-volume.loadbalancer.server.port: ${VOLUME_PORT}
        traefik.http.services.swfs-volume.loadbalancer.sticky.cookie: 'true'

  swfs-filer:
    image: ${IMAGE_NAME}:${IMAGE_TAG}
    entrypoint: /bin/sh
    command:
      - -c
      - |
        $$(echo "
          weed -logtostderr=true filer
            -dataCenter=$${FILER_PREFERED_DATACENTER}
            -rack=$${FILER_PREFERED_RACK}
            -filerGroup ${FILER_GROUP}
            -ip=$${FILER_IP}
            -ip.bind=0.0.0.0
            -port=${FILER_PORT}
            -master=${MASTER_HOST}-1:${MASTER_PORT},${MASTER_HOST}-2:${MASTER_PORT},${MASTER_HOST}-3:${MASTER_PORT}
        ")
    hostname: ${FILER_IP}
    environment:
      FILER_IP:
      FILER_PREFERED_DATACENTER: ${DATACENTER}
      FILER_PREFERED_RACK: ${RACK}
    networks:
      seaweedfs-net:
      traefik-net:
    volumes:
      - filer-vol:${DATA_PATH}
    healthcheck:
      test: wget --spider -q http://127.0.0.1:${FILER_PORT}/
      interval: ${HEALTHCHECK_INTERVAL}
      timeout: ${HEALTHCHECK_TIMEOUT}
      retries: ${HEALTHCHECK_RETRIES}
      start_period: ${HEALTHCHECK_START_PERIOD}
    deploy:
      mode: global
      restart_policy:
        delay: ${FILER_RESTART_DELAY:-1s}
      update_config:
        delay: ${FILER_UPDATE_DELAY:-15s}
      resources:
        limits:
          cpus: '${FILER_RESOURCES_LIMITS_CPUS:-1}'
          memory: ${FILER_RESOURCES_LIMITS_MEMORY:-256M}
        reservations:
          cpus: '${FILER_RESOURCES_RESERVATIONS_CPUS:-0.1}'
          memory: ${FILER_RESOURCES_RESERVATIONS_MEMORY:-128M}
      labels:
        traefik.enable: 'true'
        traefik.http.routers.swfs-filer.entrypoints: ${TRAEFIK_ENTRYPOINT}
        traefik.http.routers.swfs-filer.rule: Host(`${FILER_TRAEFIK_SUBDOMAIN}.${PUBLIC_HOSTNAME}`)
        traefik.http.middlewares.swfs-filer-auth.basicauth.users: ${FILER_TRAEFIK_AUTH}
        traefik.http.routers.swfs-filer.middlewares: swfs-filer-auth
        traefik.http.services.swfs-filer.loadbalancer.server.port: ${FILER_PORT}
        traefik.http.services.swfs-filer.loadbalancer.sticky.cookie: 'true'

networks:
  seaweedfs-net:
    name: ${SEAWEEDFS_NET_NAME:-seaweedfs-net}
    driver: ${SEAWEEDFS_NET_DRIVER:-overlay}
    attachable: ${SEAWEEDFS_NET_ATTACHABLE:-true}

  traefik-net:
    name: ${TRAEFIK_NET_NAME:-traefik-net}
    driver: ${TRAEFIK_NET_DRIVER:-overlay}
    external: true

volumes:
  master-vol:
    name: ${MASTER_VOL_NAME}
    driver: local

  volume-vol:
    name: ${VOLUME_VOL_NAME}
    driver: local

  filer-vol:
    name: ${FILER_VOL_NAME}
    driver: local
